(window.webpackJsonpdesigner=window.webpackJsonpdesigner||[]).push([[2],Array(60).concat([function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"TextHeight",type:"text",id:"textHeight",descr:"sets the height of the text block",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"sets the barcode type",options:[{id:"$blank",value:""},{id:"ean8",value:"ean8"},{id:"ean13",value:"ean13"},{id:"upcA",value:"upcA"}]},{label:"Input parameters",type:"label"},{label:"AriaLabel",type:"text",id:"ariaLabel",descr:"sets a screen readable label for Barcode"},{label:"Value",type:"text",id:"value",descr:"sets barcode value (text)"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Color",type:"text",id:"color",descr:"sets the bar color"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"sets the barcode type",options:[{id:"$blank",value:""},{id:"ean8",value:"ean8"},{id:"ean13",value:"ean13"},{id:"upcA",value:"upcA"}]},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"sets barcode value (text)"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"BarWidth",type:"text",id:"barWidth",descr:"specifies the width of the bar that displays the value to compare with",datatype:"number"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelHeight",type:"text",id:"labelHeight",descr:"sets the height of the label for the vertical layout",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"sets the width of the label for the horizontal layout",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Scale",type:"wd_checkbox",id:"scale",descr:"defines the scale configuration of Bullet Graph"},{label:"Input parameters",type:"label"},{label:"Label",type:"text",id:"label",descr:"the text label of Bullet Graph"},{label:"Placeholder",type:"text",id:"placeholder",descr:"sets an additional description for the label of the widget"},{label:"Value",type:"text",id:"value",descr:"sets the initial value to be displayed in Bullet Graph",datatype:"number"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Bands",type:"text",id:"bands",descr:"sets an array of custom bands' (ranges of performance) values and colors for Bullet Graph"},{label:"Color",type:"text",id:"color",descr:"sets the color of the bar that shows the value"},{label:"FlowTime",type:"text",id:"flowTime",descr:"defines the animation speed in milliseconds",datatype:"number"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Layout",type:"combo",id:"layout",descr:"sets the layout type of the Bullet Graph",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"}]},{label:"Marker",type:"wd_checkbox",id:"marker",descr:"defines the position of the marker of the target value"},{label:"MaxRange",type:"text",id:"maxRange",descr:"sets the maximum range value of the Bullet Graph scale",datatype:"number"},{label:"MinRange",type:"text",id:"minRange",descr:"sets the minimum range value of the Bullet Graph scale",datatype:"number"},{label:"SmoothFlow",type:"wd_checkbox",id:"smoothFlow",descr:"enables smooth animation in Bullet Graph"},{label:"Stroke",type:"text",id:"stroke",descr:"defines the width of the Bullet Graph bar",datatype:"number"},{label:"TickSize",type:"text",id:"tickSize",descr:"sets the length of the ticks on the scale of the Bullet graph",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"sets the width of the label for the horizontal layout",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"the text label of Bullet Graph"},{label:"Value",view:"text",name:"value",descr:"sets the initial value to be displayed in Bullet Graph",datatype:"number"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"image",value:"image"},{id:"imageTop",value:"imageTop"},{id:"icon",value:"icon"},{id:"iconTop",value:"iconTop"}]},{label:"Input parameters",type:"label"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input area"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Badge",type:"text",id:"badge",descr:"adds an orange circle that notifies about the number of new messages for an icon button"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"Image",type:"text",id:"image",descr:"sets path to the desired image"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the button when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"image",value:"image"},{id:"imageTop",value:"imageTop"},{id:"icon",value:"icon"},{id:"iconTop",value:"iconTop"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"CellHeight",type:"text",id:"cellHeight",descr:"the height of the cell with day"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"HeaderHeight",type:"text",id:"headerHeight",descr:"total height of the area not taken by calendar body",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"TimepickerHeight",type:"text",id:"timepickerHeight",descr:"sets height of timepicker area",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"type of calendar view",options:[{id:"$blank",value:""},{id:"time",value:"time"},{id:"month",value:"month"},{id:"year",value:"year"}]},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MonthSelect",type:"wd_checkbox",id:"monthSelect",descr:"enables the ability to select month by clicking the 'month' panel"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"wd_checkbox",id:"multiselect",descr:"enables multiple selection of dates"},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Others",type:"label"},{label:"BlockDates",type:"text",id:"blockDates",descr:"defines the selectable range"},{label:"BlockTime",type:"text",id:"blockTime",descr:"blocks a time interval"},{label:"CalendarHeader",type:"text",id:"calendarHeader",descr:"the format for the title with the month name and year"},{label:"CalendarTime",type:"text",id:"calendarTime",descr:"defines calendar time format (with api/ui.calendar_timepicker_config.md enabled)"},{label:"CalendarWeekHeader",type:"text",id:"calendarWeekHeader",descr:"specifies the label for the column with weeks numbers"},{label:"Date",type:"dtext",id:"date",descr:"specifies the year and month that will be shown in the calendar after initialization",datatype:"date",format:function(e){return e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):""}},{label:"DayTemplate",type:"text",id:"dayTemplate",descr:"defines a template for a calendar day cell"},{label:"Events",type:"text",id:"events",descr:"sets an additional CSS class that will be applied to days"},{label:"Icons",type:"wd_checkbox",id:"icons",descr:"sets an array of icons in the calendar or hides them"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"MaxDate",type:"dtext",id:"maxDate",descr:"sets a maximum date allowed for selection",datatype:"date",format:function(e){return e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):""}},{label:"MaxTime",type:"text",id:"maxTime",descr:"maximum allowed time"},{label:"MinDate",type:"dtext",id:"minDate",descr:"set min limit for selected date",datatype:"date",format:function(e){return e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):""}},{label:"MinTime",type:"text",id:"minTime",descr:"minimal allowed time"},{label:"MinuteStep",type:"text",id:"minuteStep",descr:"the step of the time selector",datatype:"number"},{label:"MonthHeader",type:"wd_checkbox",id:"monthHeader",descr:"hides/shows the calendar header"},{label:"SkipEmptyWeeks",type:"wd_checkbox",id:"skipEmptyWeeks",descr:"enables/disables displaying empty weeks (true)"},{label:"TimeIcon",type:"text",id:"timeIcon",descr:"sets an icon for time in the calendar"},{label:"Timepicker",type:"wd_checkbox",id:"timepicker",descr:"enables clock displaying for time selection"},{label:"WeekHeader",type:"wd_checkbox",id:"weekHeader",descr:"enables/disables additional header with week days (false)"},{label:"WeekNumber",type:"wd_checkbox",id:"weekNumber",descr:"enables/disables additional left column with weeks' numbers (true)"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"type of calendar view",options:[{id:"$blank",value:""},{id:"time",value:"time"},{id:"month",value:"month"},{id:"year",value:"year"}]},{template:"Others",type:"section"},{label:"Date",view:"wd_date",name:"date",descr:"specifies the year and month that will be shown in the calendar after initialization",datatype:"date",format:{parse:function(e){return/\d{1,2}\/\d{1,2}\/\d{4}/.test(e)?e:(e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):"")},edit:function(e){return e}}}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"BarWidth",type:"text",id:"barWidth",descr:"the width of bars",datatype:"number"},{label:"BorderWidth",type:"text",id:"borderWidth",descr:"defines the width of the border",datatype:"number"},{label:"CellWidth",type:"text",id:"cellWidth",descr:"specifies the width of an item cell for a chart in dynamic mode",datatype:"number"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"PieHeight",type:"text",id:"pieHeight",descr:"the height of the 3d pie",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"item",id:"item",descr:"defines markers that present chart's data items",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Legend",type:"legend",id:"legend",descr:"defines the chart legend",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Line",type:"line",id:"line",descr:"defines chart lines",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Padding",type:"padding",id:"padding",descr:"sets paddings of the chart content",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Preset",type:"combo",id:"preset",descr:"applies the predefined chart configuration object with the specified name",options:[{id:"$blank",value:""},{id:"column",value:"column"},{id:"stick",value:"stick"},{id:"alpha",value:"alpha"},{id:"area",value:"area"},{id:"line",value:"line"},{id:"point",value:"point"},{id:"simple",value:"simple"},{id:"plot",value:"plot"},{id:"round",value:"round"},{id:"square",value:"square"},{id:"diamond",value:"diamond"}]},{label:"Scale",type:"combo",id:"scale",descr:"type of chart scale, logarithic or plain",options:[{id:"$blank",value:""},{id:"logarithmic",value:"logarithmic"},{id:"linear",value:"linear"}]},{label:"Shadow",type:"wd_checkbox",id:"shadow",descr:"enables/disables the pie shadow"},{label:"Type",type:"combo",id:"type",descr:"sets the chart type",options:[{id:"$blank",value:""},{id:"area",value:"area"},{id:"bar",value:"bar"},{id:"barH",value:"barH"},{id:"donut",value:"donut"},{id:"line",value:"line"},{id:"pie",value:"pie"},{id:"pie3D",value:"pie3D"},{id:"radar",value:"radar"},{id:"scatter",value:"scatter"},{id:"spline",value:"spline"},{id:"stackedArea",value:"stackedArea"},{id:"stackedBar",value:"stackedBar"},{id:"stackedBarH",value:"stackedBarH"}]},{label:"XAxis",type:"xAxis",id:"xAxis",descr:"defines the horizontal axis",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"YAxis",type:"yAxis",id:"yAxis",descr:"defines the vertical axis",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"AriaLabel",type:"text",id:"ariaLabel",descr:"sets a screen readable label for Chart"},{label:"Label",type:"text",id:"label",descr:"sets the template for items' labels"},{label:"LabelOffset",type:"text",id:"labelOffset",descr:"the offset of sector labels from the pie frame",datatype:"number"},{label:"Value",type:"text",id:"value",descr:"defines values for the vertical axis"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Others",type:"label"},{label:"Alpha",type:"text",id:"alpha",descr:"defines the opacity of chart items",datatype:"number"},{label:"AnimateDuration",type:"text",id:"animateDuration",descr:"sets the time of rendering the area/line of one chart item in dynamic mode",datatype:"number"},{label:"Border",type:"wd_checkbox",id:"border",descr:"enables/disables the bar borders"},{label:"BorderColor",type:"text",id:"borderColor",descr:"sets the border color of each item in the graph"},{label:"Cant",type:"text",id:"cant",descr:"defines the slope angle of a 3D pie",datatype:"number"},{label:"Color",type:"text",id:"color",descr:"defines items colors"},{label:"DisableLines",type:"wd_checkbox",id:"disableLines",descr:"disapbles graph lines with radar chart"},{label:"Dynamic",type:"wd_checkbox",id:"dynamic",descr:"enables the dynamic mode for a chart"},{label:"EventRadius",type:"text",id:"eventRadius",descr:"sets the radius (in pixels) of the virtual circle within which the mouse events will fire for chart items",datatype:"number"},{label:"Fill",type:"text",id:"fill",descr:"fills the chart area with the specified background color."},{label:"FixOverflow",type:"wd_checkbox",id:"fixOverflow",descr:"chart max limit mode"},{label:"Gradient",type:"wd_checkbox",id:"gradient",descr:"specifies the chart gradient"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"LineColor",type:"text",id:"lineColor",descr:"sets the color for strips dividing the pie sectors"},{label:"Offset",type:"wd_checkbox",id:"offset",descr:"defines whether the first item of the scale will be drawn with the offset equal to the half of the scale's step (relative to the origin of the chart) or not."},{label:"Origin",type:"text",id:"origin",descr:"sets the scale origin"},{label:"PieInnerText",type:"text",id:"pieInnerText",descr:"sets the template for the pie inner labels"},{label:"Radius",type:"text",id:"radius",descr:"the radius of the bar's rounding",datatype:"number"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"X",type:"text",id:"x",descr:"the horizontal position of the pie center",datatype:"number"},{label:"XValue",type:"text",id:"xValue",descr:"a property of the dataset that defines values for the horizontal axis"},{label:"Y",type:"text",id:"y",descr:"the vertical position of the pie center",datatype:"number"},{label:"YValue",type:"text",id:"yValue",descr:"a property of the dataset that defines values for the vertical axis."}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"item",name:"item",descr:"defines markers that present chart's data items"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"sets paddings of the chart content"},{label:"Type",view:"combo",name:"type",descr:"sets the chart type",options:[{id:"$blank",value:""},{id:"area",value:"area"},{id:"bar",value:"bar"},{id:"barH",value:"barH"},{id:"donut",value:"donut"},{id:"line",value:"line"},{id:"pie",value:"pie"},{id:"pie3D",value:"pie3D"},{id:"radar",value:"radar"},{id:"scatter",value:"scatter"},{id:"spline",value:"spline"},{id:"stackedArea",value:"stackedArea"},{id:"stackedBar",value:"stackedBar"},{id:"stackedBarH",value:"stackedBarH"}]},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the template for items' labels"},{label:"Value",view:"text",name:"value",descr:"defines values for the vertical axis"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"LabelRight",type:"text",id:"labelRight",descr:"sets the text of the right-hand label"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"CheckValue",type:"text",id:"checkValue",descr:"result of getValue for checked checkbox"},{label:"CustomCheckbox",type:"wd_checkbox",id:"customCheckbox",descr:"defines the type of the checkbox"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the checkbox when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"UncheckValue",type:"text",id:"uncheckValue",descr:"the result of getValue for an unchecked checkbox"},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Template",type:"text",id:"template",descr:"sets the way of color presentation"},{label:"Input parameters",type:"label"},{label:"Value",type:"text",id:"value",descr:"currently selected color"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Others",type:"label"},{label:"GrayScale",type:"wd_checkbox",id:"grayScale",descr:"used to add a row with a set of colors from black to white"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"MaxLightness",type:"text",id:"maxLightness",descr:"sets the end value of lightness for the default color palette",datatype:"number"},{label:"MinLightness",type:"text",id:"minLightness",descr:"sets the start value of lightness for the default color palette",datatype:"number"},{label:"Palette",type:"text",id:"palette",descr:"sets palette colors"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"sets the way of color presentation"},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"currently selected color"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Editable",type:"wd_checkbox",id:"editable",descr:"allows entering characters in the colorpicker input"},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"sets date format in the control"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"Icons",type:"wd_checkbox",id:"icons",descr:"shows 'Today' and 'Clear' icons for calendar and datepicker popup"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Point",type:"wd_checkbox",id:"point",descr:"enables/disables an arrow for the datepicker"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method getValue returns data as string (otherwise, as object)"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the colorpicker input when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Button",type:"wd_checkbox",id:"button",descr:"defines whether to show the Select button"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"PopupWidth",type:"text",id:"popupWidth",descr:"width of the popup window",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"options",id:"options",descr:"defines data items of the drop-down list",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the combobox when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"wd_editor",type:"options",name:"options",descr:"defines data items of the drop-down list"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Data",type:"label"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Users",type:"users",id:"users",descr:"defines the list of users that can add comments",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"enables the read-only mode"},{label:"Others",type:"label"},{label:"CurrentUser",type:"text",id:"currentUser",descr:"sets the user who sends the comments in a certain instance of the app",datatype:"number"},{label:"Highlight",type:"combo",id:"highlight",descr:"defines the style for mentioning",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"users",value:"users"}]},{label:"ListItem",type:"text",id:"listItem",descr:"defines a custom template for comments"},{label:"Mentions",type:"wd_checkbox",id:"mentions",descr:"enables the mentioning functionality"},{label:"Mode",type:"text",id:"mode",descr:"defines which comments are loaded first (oldest or latest)"},{label:"MoreButton",type:"text",id:"moreButton",descr:"defines the label on the 'More comments' button"},{label:"SendAction",type:"combo",id:"sendAction",descr:"defines the key or a combination of keys that send a comment (Enter or Shift+Enter)",options:[{id:"$blank",value:""},{id:"click",value:"click"},{id:"enter",value:"enter"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"},{label:"Users",view:"wd_editor",type:"users",name:"users",descr:"defines the list of users that can add comments"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Max",type:"text",id:"max",descr:"the maximum value of the control",datatype:"number"},{label:"Min",type:"text",id:"min",descr:"the minimum value of the control",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"id of view, that will be affected by api/link/ui.counter_relatedaction_config.md operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Step",type:"text",id:"step",descr:"the step of the control (the difference between two successive values)",datatype:"number"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the counter when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"ColumnWidth",type:"text",id:"columnWidth",descr:"defines the default width for columns (in pixels)",datatype:"number"},{label:"FixedRowHeight",type:"wd_checkbox",id:"fixedRowHeight",descr:"defines whether the height should be fixed for all rows or can vary"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"HeaderRowHeight",type:"text",id:"headerRowHeight",descr:"sets the height of the header and footer rows",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"MaxColumnWidth",type:"text",id:"maxColumnWidth",descr:"sets the maximum width for a column",datatype:"number"},{label:"MaxRowHeight",type:"text",id:"maxRowHeight",descr:"sets the maximum height for a row",datatype:"number"},{label:"MinColumnWidth",type:"text",id:"minColumnWidth",descr:"sets the minimum width for a column",datatype:"number"},{label:"MinRowHeight",type:"text",id:"minRowHeight",descr:"sets the minimum height for a row",datatype:"number"},{label:"RowHeight",type:"text",id:"rowHeight",descr:"sets the default height for rows",datatype:"number"},{label:"RowLineHeight",type:"text",id:"rowLineHeight",descr:"defines the default line height for a grid row",datatype:"number"},{label:"SubRowHeight",type:"text",id:"subRowHeight",descr:"automatically adjusts the subrow height to the size of the text"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Columns",type:"columns",id:"columns",descr:"configures columns of the table",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"YCount",type:"text",id:"yCount",descr:"defines the height of the datatable in rows",datatype:"number"},{label:"Data",type:"label"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Datafetch",type:"text",id:"datafetch",descr:"defines the number of records that will be loaded into datatable during the next dynamic loading call",datatype:"number"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"EditMath",type:"wd_checkbox",id:"editMath",descr:"enables formula editing"},{label:"EditValue",type:"text",id:"editValue",descr:"defines which data item is editable (in case of several data items in the cell/line)"},{label:"Editable",type:"wd_checkbox",id:"editable",descr:"allows/denies editing in the table"},{label:"Editaction",type:"combo",id:"editaction",descr:"defines the action on which editors will be opened",options:[{id:"$blank",value:""},{id:"click",value:"click"},{id:"dblclick",value:"dblclick"},{id:"custom",value:"custom"}]},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"Loadahead",type:"text",id:"loadahead",descr:"sets the number of items that will be loaded on each scroll movement",datatype:"number"},{label:"Map",type:"map",id:"map",descr:"defines data mapping",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Areaselect",type:"wd_checkbox",id:"areaselect",descr:"enables/disables area selection"},{label:"Blockselect",type:"combo",id:"blockselect",descr:"enables/disables block selection",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"box",value:"box"},{id:"select",value:"select"},{id:"false",value:"false"}]},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"block",value:"block"},{id:"selection",value:"selection"},{id:"repeat",value:"repeat"},{id:"false",value:"false"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"DragColumn",type:"combo",id:"dragColumn",descr:"enables drag-and-drop support for columns",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"order",value:"order"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"wd_checkbox",id:"multiselect",descr:"enables the multi selection mode"},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"ResizeColumn",type:"wd_checkbox",id:"resizeColumn",descr:"enables/disables horizontal resizing of columns"},{label:"ResizeRow",type:"wd_checkbox",id:"resizeRow",descr:"enables/disables vertical resizing of rows"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables or disables scroll for the datatable",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollAlignY",type:"wd_checkbox",id:"scrollAlignY",descr:"enables/disables scrolling the table just by whole rows (i.e. you won't be allowed to scroll along the full length of rows)"},{label:"ScrollX",type:"wd_checkbox",id:"scrollX",descr:"enables/disables horizontal scrolling"},{label:"ScrollY",type:"wd_checkbox",id:"scrollY",descr:"enables/disables vertical scrolling"},{label:"Select",type:"combo",id:"select",descr:"sets the selection mode in DataTable",options:[{id:"$blank",value:""},{id:"cell",value:"cell"},{id:"row",value:"row"},{id:"column",value:"column"},{id:"true",value:"true"},{id:"false",value:"false"}]},{label:"Others",type:"label"},{label:"AutoConfig",type:"wd_checkbox",id:"autoConfig",descr:"datatable adjust configuration to the data"},{label:"CheckboxRefresh",type:"wd_checkbox",id:"checkboxRefresh",descr:"controls behavior of checkbox editors in grid"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Footer",type:"wd_checkbox",id:"footer",descr:"enables/disables the footer in DataTable (disabled, by default)"},{label:"Form",type:"text",id:"form",descr:"linked form"},{label:"Headermenu",type:"headermenu",id:"headermenu",descr:"adds a header menu that helps to control the column visibility",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Hover",type:"text",id:"hover",descr:"defines a css class for a row-hover in the datatable"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"LeftSplit",type:"text",id:"leftSplit",descr:"the number of the columns fixed to left side of the table (works for the Split Mode)",datatype:"number"},{label:"LiveValidation",type:"wd_checkbox",id:"liveValidation",descr:"enables validation during cell editing"},{label:"Math",type:"wd_checkbox",id:"math",descr:"enables math formulas in DataTable"},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"RightSplit",type:"text",id:"rightSplit",descr:"sets the number of the columns fixed to the right side of the table (works for the Split Mode)",datatype:"number"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Sort",type:"combo",id:"sort",descr:"enables sorting by header click",options:[{id:"$blank",value:""},{id:"multi",value:"multi"},{id:"true",value:"true"},{id:"false",value:"false"}]},{label:"Subrow",type:"text",id:"subrow",descr:"sets a subrow template"},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to clipboard from each currently selected cell"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TopSplit",type:"text",id:"topSplit",descr:"defines the number of rows that will be 'frozen' at the top of datatable",datatype:"number"},{label:"Undo",type:"wd_checkbox",id:"undo",descr:"enables reverting changes in datatable"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Columns",view:"wd_editor",type:"columns",name:"columns",descr:"configures columns of the table"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"XCount",type:"text",id:"xCount",descr:"adjusts the view width to display a certain number of items in a row",datatype:"number"},{label:"YCount",type:"text",id:"yCount",descr:"adjusts the view height to display the defined number of items in a column",datatype:"number"},{label:"Data",type:"label"},{label:"Datafetch",type:"text",id:"datafetch",descr:"defines the number of records that will be loaded during each dynamic loading request",datatype:"number"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"Loadahead",type:"text",id:"loadahead",descr:"how the number of records that need to be loaded in addition to mandatory ones during each dynamic loading request",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"SizeToContent",type:"wd_checkbox",id:"sizeToContent",descr:"if true, the height and width of a Dataview item is calculated based on the data template"},{label:"TemplateLoading",type:"text",id:"templateLoading",descr:"defines placeholder for each card while data is loading"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"type of datepicker view",options:[{id:"$blank",value:""},{id:"time",value:"time"},{id:"month",value:"month"},{id:"year",value:"year"}]},{label:"Data",type:"label"},{label:"Editable",type:"wd_checkbox",id:"editable",descr:"allows entering characters in the datepicker input"},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"dtext",id:"value",descr:"sets the initial value for a control",datatype:"date",format:function(e){return e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):""}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Multiselect",type:"wd_checkbox",id:"multiselect",descr:"enables multiple selection of dates"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"sets a date format to display in the datepicker field"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"Icons",type:"wd_checkbox",id:"icons",descr:"shows 'Today' and 'Clear' icons for calendar and datepicker popup"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Point",type:"wd_checkbox",id:"point",descr:"enables/disables an arrow for the datepicker"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Separator",type:"text",id:"separator",descr:"a delimiter for separating multiple dates in the datepicker"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method getValue returns data as string (otherwise, as object)"},{label:"TimeIcon",type:"text",id:"timeIcon",descr:"sets an icon for time in the datepicker"},{label:"Timepicker",type:"wd_checkbox",id:"timepicker",descr:"enables optional timepicker in the calendar"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the datepicker input when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"type of datepicker view",options:[{id:"$blank",value:""},{id:"time",value:"time"},{id:"month",value:"month"},{id:"year",value:"year"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"wd_date",name:"value",descr:"sets the initial value for a control",datatype:"date",format:{parse:function(e){return/\d{1,2}\/\d{1,2}\/\d{4}/.test(e)?e:(e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):"")},edit:function(e){return e}}}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"CalendarHeight",type:"text",id:"calendarHeight",descr:"sets the height of each calendar in the DateRange view in pixels",datatype:"number"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"CalendarCount",type:"text",id:"calendarCount",descr:"sets the number of calendars to be rendered in the DateRange view",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Input parameters",type:"label"},{label:"Value",type:"dtext",id:"value",descr:"sets the initially selected date range",datatype:"daterange",format:function(e){return(e=(e=e&&"object"==typeof e?[e.start,e.end]:[e]).map(function(e){return e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):""})).join(" - ")}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Button",type:"wd_checkbox",id:"button",descr:"sets a button at the bottom of DateRange"},{label:"Icons",type:"wd_checkbox",id:"icons",descr:"sets the visibility of 'Today/Clear' icons in the DateRange"},{label:"Timepicker",type:"wd_checkbox",id:"timepicker",descr:"enables clock displaying for time selection"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{template:"Input parameters",type:"section"},{label:"Value",view:"wd_date",multi:!0,name:"value",descr:"sets the initially selected date range",datatype:"daterange",format:{parse:function(e){return/\d{1,2}\/\d{1,2}\/\d{4}/.test(e)?e:(e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):"")},edit:function(e){return e}}}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Editable",type:"wd_checkbox",id:"editable",descr:"allows entering characters in the datepicker input"},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input area"},{label:"Value",type:"dtext",id:"value",descr:"sets the initial value for a control",datatype:"daterange",format:function(e){return(e=(e=e&&"object"==typeof e?[e.start,e.end]:[e]).map(function(e){return e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):""})).join(" - ")}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"sets date format in the control"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"Icons",type:"wd_checkbox",id:"icons",descr:"shows 'Today' and 'Clear' icons for calendar and datepicker popup"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Pattern",type:"text",id:"pattern",descr:"a formatting pattern applied to a text input"},{label:"Point",type:"wd_checkbox",id:"point",descr:"enables/disables an arrow for the datepicker"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Separator",type:"text",id:"separator",descr:"a delimiter for separating multiple dates in the daterangepicker"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method getValue returns data as string (otherwise, as object)"},{label:"TimeIcon",type:"text",id:"timeIcon",descr:"sets an icon for time in the datepicker"},{label:"Timepicker",type:"wd_checkbox",id:"timepicker",descr:"enables optional timepicker in the calendar"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the daterangepicker input when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"wd_date",multi:!0,name:"value",descr:"sets the initial value for a control",datatype:"daterange",format:{parse:function(e){return/\d{1,2}\/\d{1,2}\/\d{4}/.test(e)?e:(e=webix.i18n.parseFormatDate(e),webix.isDate(e)&&!isNaN(e.getTime())?webix.Date.dateToStr("%m/%d/%Y %H:%i")(e):"")},edit:function(e){return e}}}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Data",type:"label"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"LabelBottomLeft",type:"text",id:"labelBottomLeft",descr:"sets a label for the left list at the bottom"},{label:"LabelBottomRight",type:"text",id:"labelBottomRight",descr:"sets a label for the right list at the bottom"},{label:"LabelLeft",type:"text",id:"labelLeft",descr:"sets a label for the left list"},{label:"LabelRight",type:"text",id:"labelRight",descr:"sets a label for the right list"},{label:"Value",type:"text",id:"value",descr:"sets the ids of items that should be initially selected (moved to the right list)"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Buttons",type:"wd_checkbox",id:"buttons",descr:"sets a custom template for buttons or hides them"},{label:"List",type:"text",id:"list",descr:"sets the configuration of lists in the Double List widget"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"sets the ids of items that should be initially selected (moved to the right list)"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"Label",type:"text",id:"label",descr:"legend of fieldset"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"$cssName",type:"text",id:"$cssName",descr:"name of the widget the CSS of which you want to inherit for a custom widget"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"legend of fieldset"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Margin",type:"text",id:"margin",descr:"defines the space around elements (applies the specified value to all elements)",datatype:"number"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Data",type:"label"},{label:"ComplexData",type:"wd_checkbox",id:"complexData",descr:"enables complex data parsing mode"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Others",type:"label"},{label:"ElementsConfig",type:"elementsConfig",id:"elementsConfig",descr:"settings, which will be applied to all nested inputs",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Isolate",type:"wd_checkbox",id:"isolate",descr:"masks IDs of all inner elements"},{label:"Responsive",type:"text",id:"responsive",descr:"enables responsive mode for horizontal layout"},{label:"Rules",type:"rules",id:"rules",descr:"defines a set of rules for input field(s) of the form(htmlform)",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"VisibleBatch",type:"text",id:"visibleBatch",descr:"sets the batch that will be shown initially"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Scale",type:"text",id:"scale",descr:"defines the size of the gage scale",datatype:"number"},{label:"Input parameters",type:"label"},{label:"Label",type:"text",id:"label",descr:"text label of the gage wigdet"},{label:"Placeholder",type:"text",id:"placeholder",descr:"specifies measurement units for the gage"},{label:"Value",type:"text",id:"value",descr:"sets the initial value to be displayed on the gage scale",datatype:"number"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Color",type:"text",id:"color",descr:"defines the custom color for the Gage widget"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"MaxRange",type:"text",id:"maxRange",descr:"sets the maximum range value of the gage scale",datatype:"number"},{label:"MinRange",type:"text",id:"minRange",descr:"sets the minimum range value of the gage scale",datatype:"number"},{label:"SmoothFlow",type:"wd_checkbox",id:"smoothFlow",descr:"enables smooth animation in the gage widget"},{label:"Stroke",type:"text",id:"stroke",descr:"defines the width of the gage scale",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"text label of the gage wigdet"},{label:"Value",view:"text",name:"value",descr:"sets the initial value to be displayed on the gage scale",datatype:"number"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Chart",type:"text",id:"chart",descr:"the geochart configuration object"},{label:"Key",type:"text",id:"key",descr:"sets your application's Google API key"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Tooltip",type:"text",id:"tooltip",descr:"specifies a custom tooltip for a chart"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Center",type:"text",id:"center",descr:"sets the center of the map"},{label:"HeatmapConfig",type:"text",id:"heatmapConfig",descr:"defines the heatmap configuration, contains various Google API properties"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"LayerType",type:"combo",id:"layerType",descr:"sets the type of a map layer",options:[{id:"$blank",value:""},{id:"marker",value:"marker"},{id:"heatmap",value:"heatmap"}]},{label:"MapType",type:"combo",id:"mapType",descr:"sets the Google map type",options:[{id:"$blank",value:""},{id:"ROADMAP",value:"ROADMAP"},{id:"SATELLITE",value:"SATELLITE"},{id:"HYBRID",value:"HYBRID"},{id:"TERRAIN",value:"TERRAIN"}]},{label:"Zoom",type:"text",id:"zoom",descr:"defines the resolution of map objects displaying",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"XCount",type:"text",id:"xCount",descr:"defines the width of the view in items",datatype:"number"},{label:"YCount",type:"text",id:"yCount",descr:"defines the height of the view in items",datatype:"number"},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Layout",type:"combo",id:"layout",descr:"defines x or y orientation of layout",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"}]},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TemplateBack",type:"text",id:"templateBack",descr:"the html template that defines the data that will be presented in a group header in the expanded state"},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"TemplateGroup",type:"text",id:"templateGroup",descr:"the html template that defines the data that will be presented in a group header in the collapsed state"},{label:"TemplateItem",type:"text",id:"templateItem",descr:"the html template that defines the data that will be presented in grouplist items"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"Icon",type:"text",id:"icon",descr:"the widget's icon"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the icon when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Src",type:"text",id:"src",descr:"the URL of a document you'd like to show in an iframe"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the label when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Margin",type:"text",id:"margin",descr:"defines the space around elements (applies the specified value to all elements)",datatype:"number"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Isolate",type:"wd_checkbox",id:"isolate",descr:"masks IDs of all inner elements"},{label:"Responsive",type:"text",id:"responsive",descr:"enables responsive mode for horizontal layout"},{label:"VisibleBatch",type:"text",id:"visibleBatch",descr:"sets the batch that will be shown initially"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"XCount",type:"text",id:"xCount",descr:"defines the width of the view in items",datatype:"number"},{label:"YCount",type:"text",id:"yCount",descr:"defines the height of the view in items",datatype:"number"},{label:"Data",type:"label"},{label:"Datafetch",type:"text",id:"datafetch",descr:"defines the number of records that will be loaded into List during the next dynamic loading call",datatype:"number"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Dynamic",type:"wd_checkbox",id:"dynamic",descr:"enables dynamic loading in the List"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Layout",type:"combo",id:"layout",descr:"defines x or y orientation of layout",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"}]},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to api/link/ui.menu_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"XCount",type:"text",id:"xCount",descr:"defines the width of the view in items",datatype:"number"},{label:"YCount",type:"text",id:"yCount",descr:"defines the height of the view in items",datatype:"number"},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Layout",type:"combo",id:"layout",descr:"defines x or y orientation of layout",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"}]},{label:"OpenAction",type:"text",id:"openAction",descr:"alters the way of submenu opening to 'click'"},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"SubMenuPos",type:"combo",id:"subMenuPos",descr:"aligns submenu towards main menu",options:[{id:"$blank",value:""},{id:"top",value:"top"},{id:"bottom",value:"bottom"},{id:"right",value:"right"},{id:"left",value:"left"}]},{label:"SubmenuConfig",type:"text",id:"submenuConfig",descr:"defines submenu configuration"},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to api/link/ui.menu_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"OptionWidth",type:"text",id:"optionWidth",descr:"sets the width of the suggest list with options",datatype:"number"},{label:"PopupWidth",type:"text",id:"popupWidth",descr:"width of the popup window",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"options",id:"options",descr:"defines data items of the drop-down list",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input area"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a multicombo"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Button",type:"wd_checkbox",id:"button",descr:"defines whether the 'Select' button will be displayed in the options list"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeepText",type:"wd_checkbox",id:"keepText",descr:"defines whether the entered text should be kept in the input after an option is selected"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"NewValues",type:"wd_checkbox",id:"newValues",descr:"allows to enter new values into a multicombo field"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Separator",type:"text",id:"separator",descr:"a delimiter for separating options in a multicombo"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method api/link/ui.multicombo_getvalue.md returns data as a string (otherwise, as an array)"},{label:"TagMode",type:"wd_checkbox",id:"tagMode",descr:"defines presentation mode of input values"},{label:"TagTemplate",type:"text",id:"tagTemplate",descr:"defines template of input values"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the multicombo when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"wd_editor",type:"options",name:"options",descr:"defines data items of the drop-down list"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a multicombo"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"OptionWidth",type:"text",id:"optionWidth",descr:"sets width of a popup list with options",datatype:"number"},{label:"PopupWidth",type:"text",id:"popupWidth",descr:"width of the popup window",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"options",id:"options",descr:"defines data items of the drop-down list",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Separator",type:"text",id:"separator",descr:"sets a delimiter for control values"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method api/link/ui.multiselect_getvalue.md returns data as a string (otherwise, as an array)"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the multiselect when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"wd_editor",type:"options",name:"options",descr:"defines data items of the drop-down list"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/link/ui.organogram_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"AriaLabel",type:"text",id:"ariaLabel",descr:"sets a screen readable label for Organogram"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"FilterMode",type:"filterMode",id:"filterMode",descr:"defines the pattern for tree item filtering",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"ThreeState",type:"wd_checkbox",id:"threeState",descr:"enable three-state checkboxes"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/link/ui.organogram_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Count",type:"text",id:"count",descr:"the total number of records that the pager will process",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Others",type:"label"},{label:"ApiOnly",type:"wd_checkbox",id:"apiOnly",descr:"makes the pager invisible to enable paging with custom buttons"},{label:"Group",type:"text",id:"group",descr:"the number of squares for paging (a button with a number of the related page)",datatype:"number"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Level",type:"combo",id:"level",descr:"defines the level of records that will be used to calculate the current size of the page",datatype:"number",options:[{id:"$blank",value:""},{id:"1",value:"1"}]},{label:"Limit",type:"text",id:"limit",descr:"the total number of pages in the pager",datatype:"number"},{label:"Master",type:"wd_checkbox",id:"master",descr:"if false, makes the pager standalone"},{label:"Page",type:"text",id:"page",descr:"sets the currently active page (zero-based numbering)",datatype:"number"},{label:"Size",type:"text",id:"size",descr:"sets the number of records per page",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"NameWidth",type:"text",id:"nameWidth",descr:"sets the width of the first column (property names)",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"ComplexData",type:"wd_checkbox",id:"complexData",descr:"enables complex data parsing mode"},{label:"EditValue",type:"text",id:"editValue",descr:"defines which data item is editable (in case of several data items in the cell/line)"},{label:"Editable",type:"wd_checkbox",id:"editable",descr:"allows/denies editing in the view"},{label:"Editaction",type:"combo",id:"editaction",descr:"defines the action on which editors will be opened",options:[{id:"$blank",value:""},{id:"click",value:"click"},{id:"dblclick",value:"dblclick"},{id:"custom",value:"custom"}]},{label:"Elements",type:"elements",id:"elements",descr:"an array of property items",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Map",type:"map",id:"map",descr:"defines data mapping",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Others",type:"label"},{label:"Form",type:"text",id:"form",descr:"linked form"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Elements",view:"wd_editor",type:"elements",name:"elements",descr:"an array of property items"},{label:"Template",view:"text",name:"template",descr:"the component template"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"OptionHeight",type:"text",id:"optionHeight",descr:"height of radio-option item",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"text",id:"options",descr:"defines options for a set of radio buttons",datatype:"array",format:function(e){return webix.isArray(e)?e.join(","):e}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"CustomRadio",type:"wd_checkbox",id:"customRadio",descr:"enables/disables custom radio button for some skins"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Newline",type:"wd_checkbox",id:"newline",descr:"allows moving an option to a new line"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the radio button when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]},{label:"Vertical",type:"wd_checkbox",id:"vertical",descr:"arranges radiobutton vertically (false by default)"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"text",name:"options",descr:"defines options for a set of radio buttons",datatype:"array",format:{parse:function(e){return webix.isArray(e)?e.join(","):e},edit:function(e){return e}}},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"BarWidth",type:"text",id:"barWidth",descr:"the width of bars",datatype:"number"},{label:"BorderWidth",type:"text",id:"borderWidth",descr:"defines the width of the border",datatype:"number"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"PieHeight",type:"text",id:"pieHeight",descr:"the height of the 3d pie",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"defines markers that present chart's data items",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Legend",type:"legend",id:"legend",descr:"defines the chart legend",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Line",type:"line",id:"line",descr:"defines chart lines",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Padding",type:"padding",id:"padding",descr:"sets paddings of the chart content",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Preset",type:"combo",id:"preset",descr:"applies the predefined chart configuration object with the specified name",options:[{id:"$blank",value:""},{id:"column",value:"column"},{id:"stick",value:"stick"},{id:"alpha",value:"alpha"},{id:"area",value:"area"},{id:"line",value:"line"},{id:"point",value:"point"},{id:"simple",value:"simple"},{id:"plot",value:"plot"},{id:"round",value:"round"},{id:"square",value:"square"},{id:"diamond",value:"diamond"}]},{label:"Range",type:"range",id:"range",descr:"data range that should be selected in the frame",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Scale",type:"combo",id:"scale",descr:"type of chart scale, logarithic or plain",options:[{id:"$blank",value:""},{id:"logarithmic",value:"logarithmic"},{id:"linear",value:"linear"}]},{label:"Shadow",type:"wd_checkbox",id:"shadow",descr:"enables/disables the pie shadow"},{label:"Type",type:"combo",id:"type",descr:"sets the chart type",options:[{id:"$blank",value:""},{id:"area",value:"area"},{id:"bar",value:"bar"},{id:"barH",value:"barH"},{id:"donut",value:"donut"},{id:"line",value:"line"},{id:"pie",value:"pie"},{id:"pie3D",value:"pie3D"},{id:"radar",value:"radar"},{id:"scatter",value:"scatter"},{id:"spline",value:"spline"},{id:"stackedArea",value:"stackedArea"},{id:"stackedBar",value:"stackedBar"},{id:"stackedBarH",value:"stackedBarH"}]},{label:"XAxis",type:"xAxis",id:"xAxis",descr:"defines the horizontal axis",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"YAxis",type:"yAxis",id:"yAxis",descr:"defines the vertical axis",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"AriaLabel",type:"text",id:"ariaLabel",descr:"sets a screen readable label for Chart"},{label:"Label",type:"text",id:"label",descr:"sets the template for items' labels"},{label:"LabelOffset",type:"text",id:"labelOffset",descr:"the offset of sector labels from the pie frame",datatype:"number"},{label:"Value",type:"text",id:"value",descr:"defines values for the vertical axis"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Others",type:"label"},{label:"Alpha",type:"text",id:"alpha",descr:"defines the opacity of chart items",datatype:"number"},{label:"Border",type:"wd_checkbox",id:"border",descr:"enables/disables the bar borders"},{label:"BorderColor",type:"text",id:"borderColor",descr:"sets the border color of each item in the graph"},{label:"Cant",type:"text",id:"cant",descr:"defines the slope angle of a 3D pie",datatype:"number"},{label:"Color",type:"text",id:"color",descr:"defines items colors"},{label:"DisableLines",type:"wd_checkbox",id:"disableLines",descr:"disapbles graph lines with radar chart"},{label:"EventRadius",type:"text",id:"eventRadius",descr:"sets the radius (in pixels) of the virtual circle within which the mouse events will fire for chart items",datatype:"number"},{label:"Fill",type:"text",id:"fill",descr:"fills the chart area with the specified background color."},{label:"FixOverflow",type:"wd_checkbox",id:"fixOverflow",descr:"chart max limit mode"},{label:"FrameId",type:"text",id:"frameId",descr:"points to the property in data that will be used for the frame"},{label:"Gradient",type:"wd_checkbox",id:"gradient",descr:"specifies the chart gradient"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"LineColor",type:"text",id:"lineColor",descr:"sets the color for strips dividing the pie sectors"},{label:"Offset",type:"wd_checkbox",id:"offset",descr:"defines whether the first item of the scale will be drawn with the offset equal to the half of the scale's step (relative to the origin of the chart) or not."},{label:"Origin",type:"text",id:"origin",descr:"sets the scale origin"},{label:"PieInnerText",type:"text",id:"pieInnerText",descr:"sets the template for the pie inner labels"},{label:"Radius",type:"text",id:"radius",descr:"the radius of the bar's rounding",datatype:"number"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"X",type:"text",id:"x",descr:"the horizontal position of the pie center",datatype:"number"},{label:"XValue",type:"text",id:"xValue",descr:"a property of the dataset that defines values for the horizontal axis"},{label:"Y",type:"text",id:"y",descr:"the vertical position of the pie center",datatype:"number"},{label:"YValue",type:"text",id:"yValue",descr:"a property of the dataset that defines values for the vertical axis."}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"defines markers that present chart's data items"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"sets paddings of the chart content"},{label:"Type",view:"combo",name:"type",descr:"sets the chart type",options:[{id:"$blank",value:""},{id:"area",value:"area"},{id:"bar",value:"bar"},{id:"barH",value:"barH"},{id:"donut",value:"donut"},{id:"line",value:"line"},{id:"pie",value:"pie"},{id:"pie3D",value:"pie3D"},{id:"radar",value:"radar"},{id:"scatter",value:"scatter"},{id:"spline",value:"spline"},{id:"stackedArea",value:"stackedArea"},{id:"stackedBar",value:"stackedBar"},{id:"stackedBarH",value:"stackedBarH"}]},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the template for items' labels"},{label:"Value",view:"text",name:"value",descr:"defines values for the vertical axis"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the rangeslider markers",options:[{id:"$blank",value:""},{id:"alt",value:"alt"}]},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Max",type:"text",id:"max",descr:"max value of slider",datatype:"number"},{label:"Min",type:"text",id:"min",descr:"min value of slider",datatype:"number"},{label:"MoveTitle",type:"wd_checkbox",id:"moveTitle",descr:"makes the text label of rangeslider movable"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Separator",type:"text",id:"separator",descr:"a delimiter for separating values in a range"},{label:"Step",type:"text",id:"step",descr:"step of slider",datatype:"number"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method api/link/ui.rangeslider_getvalue.md returns data as string (otherwise, as an array)"},{label:"Title",type:"text",id:"title",descr:"text over slider bar"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the rangeslider when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]},{label:"Vertical",type:"wd_checkbox",id:"vertical",descr:"sets the vertical mode for a slider"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the rangeslider markers",options:[{id:"$blank",value:""},{id:"alt",value:"alt"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"PopupWidth",type:"text",id:"popupWidth",descr:"width of the popup window",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"options",id:"options",descr:"defines data items of the drop-down list",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the richselect when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"wd_editor",type:"options",name:"options",descr:"defines data items of the drop-down list"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Input parameters",type:"label"},{label:"Label",type:"text",id:"label",descr:"the text label of the rich text editor"},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for the RichText control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"the text label of the rich text editor"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for the RichText control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the input",options:[{id:"$blank",value:""},{id:"text",value:"text"},{id:"password",value:"password"},{id:"email",value:"email"},{id:"url",value:"url"},{id:"number",value:"number"}]},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Pattern",type:"text",id:"pattern",descr:"a formatting pattern applied to a text input"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the search input when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the input",options:[{id:"$blank",value:""},{id:"text",value:"text"},{id:"password",value:"password"},{id:"email",value:"email"},{id:"url",value:"url"},{id:"number",value:"number"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"OptionWidth",type:"text",id:"optionWidth",descr:"sets the width of each view option",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"text",id:"options",descr:"defines segments of a segmented button",datatype:"array",format:function(e){return webix.isArray(e)?e.join(","):e}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the button segment when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"text",name:"options",descr:"defines segments of a segmented button",datatype:"array",format:{parse:function(e){return webix.isArray(e)?e.join(","):e},edit:function(e){return e}}},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Options",type:"options",id:"options",descr:"defines options for the select control",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the select when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Options",view:"wd_editor",type:"options",name:"options",descr:"defines options for the select control"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"CollapsedWidth",type:"text",id:"collapsedWidth",descr:"defines the width of Sidebar in the collapsed state",datatype:"number"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"TitleHeight",type:"text",id:"titleHeight",descr:"sets the height of the title of the first-level menu items in the popups",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"}]},{label:"Others",type:"label"},{label:"ActiveTitle",type:"wd_checkbox",id:"activeTitle",descr:"defines whether the first-level menu items are expandable"},{label:"Collapsed",type:"wd_checkbox",id:"collapsed",descr:"defines whether the sidebar will be rendered in the collapsed or expanded state"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"FilterMode",type:"filterMode",id:"filterMode",descr:"defines the pattern for tree item filtering",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"MultipleOpen",type:"wd_checkbox",id:"multipleOpen",descr:"allows expanding several menu items at a time"},{label:"Position",type:"combo",id:"position",descr:"sets the position of sidebar",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"ThreeState",type:"wd_checkbox",id:"threeState",descr:"defines three-state checkboxes for the tree"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the slider marker",options:[{id:"$blank",value:""},{id:"alt",value:"alt"}]},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Max",type:"text",id:"max",descr:"max value of slider",datatype:"number"},{label:"Min",type:"text",id:"min",descr:"min value of slider",datatype:"number"},{label:"MoveTitle",type:"wd_checkbox",id:"moveTitle",descr:"makes the text label of slider movable"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Step",type:"text",id:"step",descr:"step of slider",datatype:"number"},{label:"Title",type:"text",id:"title",descr:"text over slider bar"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the slider when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]},{label:"Vertical",type:"wd_checkbox",id:"vertical",descr:"sets the vertical mode for a slider"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the slider marker",options:[{id:"$blank",value:""},{id:"alt",value:"alt"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"image",value:"image"},{id:"imageTop",value:"imageTop"},{id:"icon",value:"icon"},{id:"iconTop",value:"iconTop"}]},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"LabelRight",type:"text",id:"labelRight",descr:"sets the text of the right-hand label"},{label:"OffLabel",type:"text",id:"offLabel",descr:"a text label on the button in the turned off state"},{label:"OnLabel",type:"text",id:"onLabel",descr:"a text label on the button in the turned on state"},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input area"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Badge",type:"text",id:"badge",descr:"adds an orange circle that notifies about the number of new messages for an icon button"},{label:"CheckValue",type:"text",id:"checkValue",descr:"result of getValue for checked checkbox"},{label:"CustomCheckbox",type:"wd_checkbox",id:"customCheckbox",descr:"defines the type of the checkbox"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Pattern",type:"text",id:"pattern",descr:"a formatting pattern applied to a text input"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the switch when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"UncheckValue",type:"text",id:"uncheckValue",descr:"the result of getValue for an unchecked checkbox"},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"image",value:"image"},{id:"imageTop",value:"imageTop"},{id:"icon",value:"icon"},{id:"iconTop",value:"iconTop"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"OptionWidth",type:"text",id:"optionWidth",descr:"sets the width of each view option",datatype:"number"},{label:"PopupWidth",type:"text",id:"popupWidth",descr:"width of popup for extra tabs",datatype:"number"},{label:"TabMinWidth",type:"text",id:"tabMinWidth",descr:"minimum width for responsive tabs",datatype:"number"},{label:"TabMoreWidth",type:"text",id:"tabMoreWidth",descr:"width of 'more' button in tabbar",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"bottom",value:"bottom"}]},{label:"YCount",type:"text",id:"yCount",descr:"count of items in popup for responsive tabbar",datatype:"number"},{label:"Data",type:"label"},{label:"Options",type:"text",id:"options",descr:"defines tabs in a tabbar",datatype:"array",format:function(e){return webix.isArray(e)?e.join(","):e}},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"BottomOffset",type:"text",id:"bottomOffset",descr:"bottom offset of tabbar",datatype:"number"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"MoreTemplate",type:"text",id:"moreTemplate",descr:"template for 'more' button for responsive tabbar"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"PopupTemplate",type:"text",id:"popupTemplate",descr:"template for items in popup for responsive tabbar"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"TabMargin",type:"text",id:"tabMargin",descr:"space between tabs",datatype:"number"},{label:"TabOffset",type:"text",id:"tabOffset",descr:"left padding of first tab",datatype:"number"},{label:"TabbarPopup",type:"text",id:"tabbarPopup",descr:"custom popup for responsive tabbar"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the tabbar item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TopOffset",type:"text",id:"topOffset",descr:"top offset of tabbar",datatype:"number"},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"bottom",value:"bottom"}]},{template:"Data",type:"section"},{label:"Options",view:"text",name:"options",descr:"defines tabs in a tabbar",datatype:"array",format:{parse:function(e){return webix.isArray(e)?e.join(","):e},edit:function(e){return e}}},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Data",type:"label"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Others",type:"label"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Src",type:"text",id:"src",descr:"the path to an external template that is loaded by Ajax"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the text input",options:[{id:"$blank",value:""},{id:"text",value:"text"},{id:"password",value:"password"},{id:"email",value:"email"},{id:"url",value:"url"},{id:"number",value:"number"}]},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input area"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Pattern",type:"text",id:"pattern",descr:"a formatting pattern applied to a text input"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the text input when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the text input",options:[{id:"$blank",value:""},{id:"text",value:"text"},{id:"password",value:"password"},{id:"email",value:"email"},{id:"url",value:"url"},{id:"number",value:"number"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Pattern",type:"text",id:"pattern",descr:"a formatting pattern applied to a text input"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the textarea input when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"LabelWidth",type:"text",id:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"BottomPadding",type:"text",id:"bottomPadding",descr:"sets the bottom offset of the control input",datatype:"number"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the input",options:[{id:"$blank",value:""},{id:"text",value:"text"},{id:"textarea",value:"textarea"}]},{label:"Input parameters",type:"label"},{label:"BottomLabel",type:"text",id:"bottomLabel",descr:"sets a label under a control"},{label:"Clear",type:"combo",id:"clear",descr:"allows removing control value upon clicking the icon",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"hover",value:"hover"},{id:"replace",value:"replace"}]},{label:"Icon",type:"text",id:"icon",descr:"sets an icon into the control"},{label:"Label",type:"text",id:"label",descr:"sets the text of the label"},{label:"LabelAlign",type:"combo",id:"labelAlign",descr:"the alignment of a label inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"},{id:"center",value:"center"}]},{label:"LabelPosition",type:"combo",id:"labelPosition",descr:"positions a label in relation to the control",options:[{id:"$blank",value:""},{id:"top",value:"top"}]},{label:"Placeholder",type:"text",id:"placeholder",descr:"placeholder text for the input area"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Readonly",type:"wd_checkbox",id:"readonly",descr:"configures readonly mode for the input"},{label:"Others",type:"label"},{label:"Attributes",type:"text",id:"attributes",descr:"sets a object with HTML input attributes that will be parsed for the Webix input control"},{label:"Badge",type:"text",id:"badge",descr:"adds an orange circle that notifies about the number of new messages for an icon button"},{label:"Format",type:"text",id:"format",descr:"a number format that should be applied to a text input"},{label:"Highlight",type:"text",id:"highlight",descr:"defines the content and look (font color, background color) of the text in the input"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"InputAlign",type:"combo",id:"inputAlign",descr:"the alignment of an input inside its container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"right",value:"right"}]},{label:"Invalid",type:"wd_checkbox",id:"invalid",descr:"specifies, whether the control is valid/invalid after validation"},{label:"InvalidMessage",type:"text",id:"invalidMessage",descr:"sets the text of a validation message"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"Pattern",type:"text",id:"pattern",descr:"a formatting pattern applied to a text input"},{label:"RelatedAction",type:"combo",id:"relatedAction",descr:"the action to call when the value of a control changes",options:[{id:"$blank",value:""},{id:"show",value:"show"},{id:"enable",value:"enable"}]},{label:"RelatedView",type:"text",id:"relatedView",descr:"the ID of the view that will be affected by the relatedAction operation"},{label:"Required",type:"wd_checkbox",id:"required",descr:"marks field as required"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Validate",type:"text",id:"validate",descr:"adds validation to the field"},{label:"ValidateEvent",type:"combo",id:"validateEvent",descr:"on which event validation fires",options:[{id:"$blank",value:""},{id:"key",value:"key"},{id:"blur",value:"blur"}]}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"LabelWidth",view:"text",name:"labelWidth",descr:"the width of the label",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the input",options:[{id:"$blank",value:""},{id:"text",value:"text"},{id:"textarea",value:"textarea"}]},{template:"Input parameters",type:"section"},{label:"Label",view:"text",name:"label",descr:"sets the text of the label"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Hours",type:"wd_checkbox",id:"hours",descr:"defines whether to display hours"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Seconds",type:"wd_checkbox",id:"seconds",descr:"defines whether to display seconds"},{label:"Twelve",type:"wd_checkbox",id:"twelve",descr:"displays the am/pm selector"},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Input parameters",type:"label"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Button",type:"wd_checkbox",id:"button",descr:"defines whether to show the Done button"},{label:"StringResult",type:"wd_checkbox",id:"stringResult",descr:"if the parameter is set to true, the method *getValue()* returns value as string (otherwise, as an object)"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/link/ui.timeline_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Others",type:"label"},{label:"Layout",type:"combo",id:"layout",descr:"defines the way of placement for timeline items",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"}]},{label:"TemplateDate",type:"text",id:"templateDate",descr:"defines the template for the date section of Timeline"},{label:"TemplateDetails",type:"text",id:"templateDetails",descr:"defines the template for the details section of Timeline"},{label:"TemplateValue",type:"text",id:"templateValue",descr:"defines the template for the value section of Timeline"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/link/ui.timeline_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"InputHeight",type:"text",id:"inputHeight",descr:"the height of the input area, or a button's text value area.",datatype:"number"},{label:"InputWidth",type:"text",id:"inputWidth",descr:"the width of the input area, or a button's text value area.",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Align",type:"combo",id:"align",descr:"the alignment of the control within the parent container",options:[{id:"$blank",value:""},{id:"left",value:"left"},{id:"center",value:"center"},{id:"right",value:"right"}]},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Type",type:"combo",id:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"image",value:"image"},{id:"imageTop",value:"imageTop"},{id:"icon",value:"icon"},{id:"iconTop",value:"iconTop"}]},{label:"Input parameters",type:"label"},{label:"Icon",type:"text",id:"icon",descr:"an icon for pressed and unpressed toggle states"},{label:"OffLabel",type:"text",id:"offLabel",descr:"a text label on the button in the unpressed state"},{label:"OnLabel",type:"text",id:"onLabel",descr:"a text label on the button in the pressed state"},{label:"Value",type:"text",id:"value",descr:"sets the initial value for a control"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Others",type:"label"},{label:"Hotkey",type:"text",id:"hotkey",descr:"sets a hotkey that triggers button clicking"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Name",type:"text",id:"name",descr:"name of the control"},{label:"OffIcon",type:"text",id:"offIcon",descr:"an icon for an unpressed toggle"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the toggle button when a cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Type",view:"combo",name:"type",descr:"the type of the button",options:[{id:"$blank",value:""},{id:"image",value:"image"},{id:"imageTop",value:"imageTop"},{id:"icon",value:"icon"},{id:"iconTop",value:"iconTop"}]},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"sets the initial value for a control"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Margin",type:"text",id:"margin",descr:"defines the space around elements (applies the specified value to all elements)",datatype:"number"},{label:"Padding",type:"padding",id:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides).",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Type",type:"combo",id:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]},{label:"Data",type:"label"},{label:"ComplexData",type:"wd_checkbox",id:"complexData",descr:"enables complex data parsing mode"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Interaction with users",type:"label"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Others",type:"label"},{label:"ElementsConfig",type:"elementsConfig",id:"elementsConfig",descr:"settings, which will be applied to all nested inputs",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Isolate",type:"wd_checkbox",id:"isolate",descr:"masks IDs of all inner elements"},{label:"Responsive",type:"text",id:"responsive",descr:"enables responsive mode for horizontal layout"},{label:"Rules",type:"rules",id:"rules",descr:"defines a set of rules for input field(s) of the form(htmlform)",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"VisibleBatch",type:"text",id:"visibleBatch",descr:"sets the batch that will be shown initially"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Padding",view:"wd_editor",type:"padding",name:"padding",descr:"defines the space between the element borders and content (applies the specified value to all sides)."},{label:"Type",view:"combo",name:"type",descr:"defines the layout borders",options:[{id:"$blank",value:""},{id:"line",value:"line"},{id:"clean",value:"clean"},{id:"wide",value:"wide"},{id:"space",value:"space"},{id:"form",value:"form"}]}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables selection in the tree",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"FilterMode",type:"filterMode",id:"filterMode",descr:"defines the pattern for tree item filtering",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"ThreeState",type:"wd_checkbox",id:"threeState",descr:"defines three-state checkboxes for the tree"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"HeaderHeight",type:"text",id:"headerHeight",descr:"sets the height of the Treemap header",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Data",type:"label"},{label:"DataFeed",type:"text",id:"dataFeed",descr:"alternative data source for filtered and bound data"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Input parameters",type:"label"},{label:"Value",type:"text",id:"value",descr:"a template that specifies the area of an item rectangle"},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"ActiveItem",type:"wd_checkbox",id:"activeItem",descr:"specifies if children of the branches will be rendered in the TreeMap"},{label:"Branch",type:"text",id:"branch",descr:"specifies the Treemap branch that should be displayed"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"FilterMode",type:"filterMode",id:"filterMode",descr:"defines the pattern for tree item filtering",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"HeaderTemplate",type:"text",id:"headerTemplate",descr:"sets the template for the header label"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"SubRender",type:"wd_checkbox",id:"subRender",descr:"defines if the sub-elements should be rendered for the first-level branches"},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"ThreeState",type:"wd_checkbox",id:"threeState",descr:"enable three-state checkboxes"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"},{template:"Input parameters",type:"section"},{label:"Value",view:"text",name:"value",descr:"a template that specifies the area of an item rectangle"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"ColumnWidth",type:"text",id:"columnWidth",descr:"defines the default width for columns (in pixels)",datatype:"number"},{label:"FixedRowHeight",type:"wd_checkbox",id:"fixedRowHeight",descr:"defines whether the height should be fixed for all rows or can vary"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"HeaderRowHeight",type:"text",id:"headerRowHeight",descr:"sets the height of the header and footer rows",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"MaxColumnWidth",type:"text",id:"maxColumnWidth",descr:"sets the maximum width for a column",datatype:"number"},{label:"MaxRowHeight",type:"text",id:"maxRowHeight",descr:"sets the maximum height for a row",datatype:"number"},{label:"MinColumnWidth",type:"text",id:"minColumnWidth",descr:"sets the minimum width for a column",datatype:"number"},{label:"MinRowHeight",type:"text",id:"minRowHeight",descr:"sets the minimum height for a row",datatype:"number"},{label:"RowHeight",type:"text",id:"rowHeight",descr:"sets the default height for rows",datatype:"number"},{label:"RowLineHeight",type:"text",id:"rowLineHeight",descr:"defines the default line height for a grid row",datatype:"number"},{label:"SubRowHeight",type:"text",id:"subRowHeight",descr:"automatically adjusts the subrow height to the size of the text"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Columns",type:"columns",id:"columns",descr:"configures columns of the table",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"YCount",type:"text",id:"yCount",descr:"defines the height of the datatable in rows",datatype:"number"},{label:"Data",type:"label"},{label:"Datafetch",type:"text",id:"datafetch",descr:"defines the number of records that will be loaded into datatable during the next dynamic loading call",datatype:"number"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"EditMath",type:"wd_checkbox",id:"editMath",descr:"enables formula editing"},{label:"EditValue",type:"text",id:"editValue",descr:"defines which data item is editable (in case of several data items in the cell/line)"},{label:"Editable",type:"wd_checkbox",id:"editable",descr:"allows/denies editing in the view"},{label:"Editaction",type:"combo",id:"editaction",descr:"defines the action on which editors will be opened",options:[{id:"$blank",value:""},{id:"click",value:"click"},{id:"dblclick",value:"dblclick"},{id:"custom",value:"custom"}]},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"Loadahead",type:"text",id:"loadahead",descr:"sets the number of items that will be loaded on each scroll movement",datatype:"number"},{label:"Map",type:"map",id:"map",descr:"defines data mapping",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Areaselect",type:"wd_checkbox",id:"areaselect",descr:"enables/disables area selection"},{label:"Blockselect",type:"combo",id:"blockselect",descr:"enables/disables block selection",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"box",value:"box"},{id:"select",value:"select"},{id:"false",value:"false"}]},{label:"Clipboard",type:"wd_checkbox",id:"clipboard",descr:"enables/disables clipboard support on desktop devices"},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"DragColumn",type:"combo",id:"dragColumn",descr:"enables drag-and-drop support for columns",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"order",value:"order"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"wd_checkbox",id:"multiselect",descr:"enables the multi selection mode"},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"ResizeColumn",type:"wd_checkbox",id:"resizeColumn",descr:"enables/disables horizontal resizing of columns"},{label:"ResizeRow",type:"wd_checkbox",id:"resizeRow",descr:"enables/disables vertical resizing of rows"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables or disables scroll for the datatable",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"false",value:"false"}]},{label:"ScrollAlignY",type:"wd_checkbox",id:"scrollAlignY",descr:"enables/disables scrolling the table just by whole rows (i.e. you won't be allowed to scroll along the full length of rows)"},{label:"ScrollX",type:"wd_checkbox",id:"scrollX",descr:"enables/disables horizontal scrolling"},{label:"ScrollY",type:"wd_checkbox",id:"scrollY",descr:"enables/disables vertical scrolling"},{label:"Select",type:"combo",id:"select",descr:"sets the selection mode in DataTable",options:[{id:"$blank",value:""},{id:"cell",value:"cell"},{id:"row",value:"row"},{id:"column",value:"column"},{id:"true",value:"true"},{id:"false",value:"false"}]},{label:"Others",type:"label"},{label:"AutoConfig",type:"wd_checkbox",id:"autoConfig",descr:"datatable adjust configuration to the data"},{label:"CheckboxRefresh",type:"wd_checkbox",id:"checkboxRefresh",descr:"controls behavior of checkbox editors in grid"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"FilterMode",type:"filterMode",id:"filterMode",descr:"defines filtering rules in tree-like components",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Footer",type:"wd_checkbox",id:"footer",descr:"enables/disables the footer in DataTable (disabled, by default)"},{label:"Form",type:"text",id:"form",descr:"linked form"},{label:"Headermenu",type:"headermenu",id:"headermenu",descr:"adds a header menu that helps to control the column visibility",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Hover",type:"text",id:"hover",descr:"defines a css class for a row-hover in the datatable"},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"LeftSplit",type:"text",id:"leftSplit",descr:"the number of the columns fixed to left side of the table (works for the Split Mode)",datatype:"number"},{label:"LiveValidation",type:"wd_checkbox",id:"liveValidation",descr:"enables validation during cell editing"},{label:"Math",type:"wd_checkbox",id:"math",descr:"enables math formulas in DataTable"},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of TreeTable data"},{label:"RightSplit",type:"text",id:"rightSplit",descr:"sets the number of the columns fixed to the right side of the table (works for the Split Mode)",datatype:"number"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Sort",type:"combo",id:"sort",descr:"enables sorting by header click",options:[{id:"$blank",value:""},{id:"multi",value:"multi"},{id:"true",value:"true"},{id:"false",value:"false"}]},{label:"Subrow",type:"text",id:"subrow",descr:"sets a subrow template"},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to clipboard from each currently selected cell"},{label:"ThreeState",type:"wd_checkbox",id:"threeState",descr:"defines three-state checkboxes for the tree"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Undo",type:"wd_checkbox",id:"undo",descr:"enables reverting changes in datatable"}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Columns",view:"wd_editor",type:"columns",name:"columns",descr:"configures columns of the table"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{template:"Data",type:"section"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){"use strict";a.r(t),a.d(t,"property",function(){return l}),a.d(t,"form",function(){return i});var l=[{label:"Sizes",type:"label"},{label:"Gravity",type:"text",id:"gravity",descr:"sets the view gravity",datatype:"number"},{label:"Height",type:"text",id:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",type:"text",id:"width",descr:"sets the width of a widget",datatype:"number"},{label:"Display",type:"label"},{label:"Borderless",type:"wd_checkbox",id:"borderless",descr:"used to hide the component borders"},{label:"Css<span webix_tooltip='Update stylesheet' class='webix_icon mdi mdi-brush'></span>",type:"text",id:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles",css:"custom_styles"},{label:"Item",type:"type",id:"item",descr:"alias to the api/renderstack_type_config.md property",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"XCount",type:"text",id:"xCount",descr:"defines the width of the view in items",datatype:"number"},{label:"YCount",type:"text",id:"yCount",descr:"defines the height of the view in items",datatype:"number"},{label:"Data",type:"label"},{label:"Datathrottle",type:"text",id:"datathrottle",descr:"sets the polling interval (the time period between the completion of a network request and the next request for data)",datatype:"number"},{label:"ExternalData",type:"text",id:"externalData",descr:"allows defining custom 'move' logic for the component."},{label:"RemoveMissed",type:"wd_checkbox",id:"removeMissed",descr:"defines how to treat items in case of reloading"},{label:"Template",type:"text",id:"template",descr:"the component template"},{label:"Data",type:"url",id:"url",descr:"the URL which the component will use to load data after its initialization",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"Interaction with users",type:"label"},{label:"Clipboard",type:"combo",id:"clipboard",descr:"enables/disables clipboard support on desktop devices",options:[{id:"$blank",value:""},{id:"modify",value:"modify"},{id:"insert",value:"insert"},{id:"custom",value:"custom"}]},{label:"Disabled",type:"wd_checkbox",id:"disabled",descr:"indicates whether an item is enabled"},{label:"Drag",type:"combo",id:"drag",descr:"enables or disables drag-and-drop",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"order",value:"order"},{id:"move",value:"move"},{id:"inner",value:"inner"},{id:"source",value:"source"},{id:"target",value:"target"},{id:"false",value:"false"}]},{label:"Dragscroll",type:"combo",id:"dragscroll",descr:"enables autoscroll of the component during drag-n-drop",options:[{id:"$blank",value:""},{id:"x",value:"x"},{id:"y",value:"y"},{id:"xy",value:"xy"},{id:"false",value:"false"},{id:"true",value:"true"}]},{label:"MouseEventDelay",type:"text",id:"mouseEventDelay",descr:"the delay between a real mouse action and invoking the related events",datatype:"number"},{label:"Multiselect",type:"combo",id:"multiselect",descr:"enables multiselect mode",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"touch",value:"touch"},{id:"level",value:"level"}]},{label:"Navigation",type:"wd_checkbox",id:"navigation",descr:"activates the selection keyboard navigation"},{label:"Scroll",type:"combo",id:"scroll",descr:"enables/disables the scroll bar",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"},{id:"xy",value:"xy"},{id:"auto",value:"auto"},{id:"false",value:"false"}]},{label:"ScrollSpeed",type:"text",id:"scrollSpeed",descr:"the time during which the component is scrolled to the specified position (in milliseconds)"},{label:"Select",type:"combo",id:"select",descr:"enables/disables items selection or multiselection in widgets",options:[{id:"$blank",value:""},{id:"true",value:"true"},{id:"false",value:"false"},{id:"multiselect",value:"multiselect"}]},{label:"Others",type:"label"},{label:"Delimiter",type:"delimiter",id:"delimiter",descr:"sets CSV delimiters for clipboard operations",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"KeyPressTimeout",type:"text",id:"keyPressTimeout",descr:"a delay between the key press and the action",datatype:"number"},{label:"Layout",type:"combo",id:"layout",descr:"defines x or y orientation of layout",options:[{id:"$blank",value:""},{id:"y",value:"y"},{id:"x",value:"x"}]},{label:"Prerender",type:"wd_checkbox",id:"prerender",descr:"invokes the full rendering of data"},{label:"Rules",type:"rules",id:"rules",descr:"set of validation rules for the component",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"TemplateCopy",type:"text",id:"templateCopy",descr:"sets the template according to which data will be copied to the clipboard"},{label:"Tooltip",type:"tooltip",id:"tooltip",descr:"sets a popup message next to the item when the cursor points to it",format:function(){return"<span class='custom_editor_property'>Configure</span>"}},{label:"UniteBy",type:"text",id:"uniteBy",descr:"sets the template according which items will be grouped in units."}],i=[{template:"Sizes",type:"section"},{label:"Height",view:"text",name:"height",descr:"sets the height of the component",datatype:"number"},{label:"Width",view:"text",name:"width",descr:"sets the width of a widget",datatype:"number"},{template:"Display",type:"section"},{label:"Borderless",view:"switch",name:"borderless",descr:"used to hide the component borders"},{label:"Css",view:"wd_style",name:"css",descr:"the name of the CSS class that will be applied to the view container or the object with styles"},{label:"Item",view:"wd_editor",type:"type",name:"item",descr:"alias to the api/renderstack_type_config.md property"},{template:"Data",type:"section"},{label:"Template",view:"text",name:"template",descr:"the component template"},{label:"Data",view:"wd_editor",type:"url",name:"url",descr:"the URL which the component will use to load data after its initialization"}]},function(e,t,a){var l={"./barcode":60,"./barcode.js":60,"./bullet":61,"./bullet.js":61,"./button":62,"./button.js":62,"./calendar":63,"./calendar.js":63,"./chart":64,"./chart.js":64,"./checkbox":65,"./checkbox.js":65,"./colorboard":66,"./colorboard.js":66,"./colorpicker":67,"./colorpicker.js":67,"./colorselect":68,"./colorselect.js":68,"./combo":69,"./combo.js":69,"./comments":70,"./comments.js":70,"./counter":71,"./counter.js":71,"./datatable":72,"./datatable.js":72,"./dataview":73,"./dataview.js":73,"./datepicker":74,"./datepicker.js":74,"./daterange":75,"./daterange.js":75,"./daterangepicker":76,"./daterangepicker.js":76,"./dbllist":77,"./dbllist.js":77,"./fieldset":78,"./fieldset.js":78,"./form":79,"./form.js":79,"./gage":80,"./gage.js":80,"./geochart":81,"./geochart.js":81,"./google-map":82,"./google-map.js":82,"./grouplist":83,"./grouplist.js":83,"./icon":84,"./icon.js":84,"./iframe":85,"./iframe.js":85,"./label":86,"./label.js":86,"./layout":87,"./layout.js":87,"./list":88,"./list.js":88,"./menu":89,"./menu.js":89,"./multicombo":90,"./multicombo.js":90,"./multiselect":91,"./multiselect.js":91,"./organogram":92,"./organogram.js":92,"./pager":93,"./pager.js":93,"./property":94,"./property.js":94,"./radio":95,"./radio.js":95,"./rangechart":96,"./rangechart.js":96,"./rangeslider":97,"./rangeslider.js":97,"./richselect":98,"./richselect.js":98,"./richtext":99,"./richtext.js":99,"./search":100,"./search.js":100,"./segmented":101,"./segmented.js":101,"./select":102,"./select.js":102,"./sidebar":103,"./sidebar.js":103,"./slider":104,"./slider.js":104,"./spacer":105,"./spacer.js":105,"./switch":106,"./switch.js":106,"./tabbar":107,"./tabbar.js":107,"./template":108,"./template.js":108,"./text":109,"./text.js":109,"./textarea":110,"./textarea.js":110,"./texthighlight":111,"./texthighlight.js":111,"./timeboard":112,"./timeboard.js":112,"./timeline":113,"./timeline.js":113,"./toggle":114,"./toggle.js":114,"./toolbar":115,"./toolbar.js":115,"./tree":116,"./tree.js":116,"./treemap":117,"./treemap.js":117,"./treetable":118,"./treetable.js":118,"./unitlist":119,"./unitlist.js":119};function i(e){var t=s(e);return a(t)}function s(e){if(!a.o(l,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return l[e]}i.keys=function(){return Object.keys(l)},i.resolve=s,e.exports=i,i.id=120}])]);